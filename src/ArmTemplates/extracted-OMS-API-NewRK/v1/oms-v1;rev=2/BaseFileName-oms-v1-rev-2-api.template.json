{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "apimServiceName": {
      "type": "string"
    }
  },
  "resources": [
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis",
      "name": "[concat(parameters('apimServiceName'), '/oms-v1;rev=2')]",
      "dependsOn": [],
      "properties": {
        "description": "___________________________________________________________________________________________________________\n\n## Description\nRestFul Api for Import feedback and check state of the  on Feedback Management System\n\n## Authorization\nThis API will require authorization OAuth 2.0 **(JTI MS AAD)** and authorization grant type (client_credentials) in developer portal.\n\n## Subscription\nThis API requires subscription *approval* that needs to be approved by this API owner (BTS-P&C). Supscription request needs to be made from any of the API Products containing this API.\nOnce subscription is approved, the subscriber will optain an API Key that will be required to call these API operations (it will help identiying the client on each and every request).\n\nIt is the responsability of the subscriber keep this API key secret and renew it with certain frequency, and in their own schedule.\n\n## Security\nThis API requires OAuth Client authentication. Therefore, any future application willing to call this API requires being registered in JTI AAD and granted access to this API app regitration and to the corresponding scope.\n\n ### API app registration to request access to API for each environment:  \n- DEV AAD Application =  app-api-OMS-4DES-DEV (CHG235631) / AAD API app ID = a8e5558f-452f-464d-89ee-cecf815e8ed3\n- QA AAD Applicaiton = app-api-OMS-4DES-QA (CHG235631) / AAD API app ID = 7f058337-b4a4-4e06-ac5a-533ce0e4a136\n- PROD AAD Application = app-api-OMS-4DES-PRD (CHG235631) / AAD API app ID = ddb71d27-679b-4de7-aae6-6ec0cca49e02\n\nAPI scope (API role) = Full access to any SubMarket Data\n\n*Note: Consumer application registration needs to be raised in Service Now to **ICS team**.*\n\n___________________________________________________________________________________________________________",
        "authenticationSettings": {
          "oAuth2": {
            "authorizationServerId": "JTI-MS-AAD-CC",
            "scope": "api://a8e5558f-452f-464d-89ee-cecf815e8ed3/.default"
          },
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "2",
        "apiVersion": "v1",
        "apiRevisionDescription": "Add Markets variables and X-ApiKey header",
        "apiVersionSetId": "[concat(resourceId('Microsoft.ApiManagement/service', parameters('apimServiceName')), '/apiVersionSets/628b93acde136e9e8501eaf8')]",
        "subscriptionRequired": true,
        "displayName": "OMS-DES API",
        "serviceUrl": "https://msfwep01-srv-16:301",
        "path": "oms",
        "protocols": [
          "https"
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/schemas",
      "name": "[concat(parameters('apimServiceName'), '/oms-v1;rev=2/628b90db5ddd17123ca84cf0')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'oms-v1;rev=2')]"
      ],
      "properties": {
        "contentType": "application/vnd.ms-azure-apim.swagger.definitions+json",
        "document": {
          "definitions": {
            "InventoryItem": {
              "required": [
                "sku",
                "result"
              ],
              "type": "object",
              "properties": {
                "sku": {
                  "type": "string"
                },
                "result": {
                  "$ref": "#/definitions/Result"
                }
              }
            },
            "Result": {
              "required": [
                "status"
              ],
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean"
                },
                "message": {
                  "type": "string"
                }
              }
            },
            "ApiError": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "Product": {
              "required": [
                "sku",
                "result"
              ],
              "type": "object",
              "properties": {
                "sku": {
                  "type": "string"
                },
                "result": {
                  "$ref": "#/definitions/Result"
                }
              }
            }
          }
        }
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/diagnostics",
      "name": "[concat(parameters('apimServiceName'), '/applicationinsights')]",
      "dependsOn": [],
      "properties": {
        "alwaysLog": "allErrors",
        "loggerId": "/subscriptions/55b6f82d-1c3f-431c-9acd-3e304fa34ca2/resourceGroups/rgrp-msfwex17-02-esb-apim-dev/providers/Microsoft.ApiManagement/service/apim-msfwex17-dev/loggers/appins-msfwex17-02-apimlogs-dev",
        "httpCorrelationProtocol": "Legacy",
        "verbosity": "information",
        "logClientIp": true,
        "sampling": {
          "samplingType": "fixed",
          "percentage": 30.0
        },
        "frontend": {
          "request": {
            "headers": [],
            "body": {
              "bytes": 0
            }
          },
          "response": {
            "headers": [],
            "body": {
              "bytes": 0
            }
          }
        },
        "backend": {
          "request": {
            "headers": [],
            "body": {
              "bytes": 0
            }
          },
          "response": {
            "headers": [],
            "body": {
              "bytes": 0
            }
          }
        }
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/tags",
      "name": "[concat(parameters('apimServiceName'), '/oms-v1;rev=2/OMS')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'oms-v1;rev=2')]"
      ],
      "properties": {
        "displayName": "OMS"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/oms-v1;rev=2/Inventory_Put')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'oms-v1;rev=2')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), 'oms-v1;rev=2', '628b90db5ddd17123ca84cf0')]"
      ],
      "properties": {
        "displayName": "Update a waiting inventory action with a success / failure result.",
        "method": "PUT",
        "urlTemplate": "/{submarket}/inventory",
        "description": "Update a waiting inventory action with a success / failure result.",
        "templateParameters": [
          {
            "name": "submarket",
            "description": "/{submarket}/inventory",
            "type": "string",
            "defaultValue": "ukp",
            "required": true,
            "values": [
              "ukp",
              "ukn"
            ]
          }
        ],
        "request": {
          "headers": [],
          "queryParameters": [],
          "representations": [
            {
              "contentType": "application/json",
              "schemaId": "628b90db5ddd17123ca84cf0",
              "typeName": "InventoryItem",
              "examples": {
                "default": {
                  "value": {
                    "sku": "string",
                    "result": {
                      "status": true,
                      "message": "string"
                    }
                  }
                }
              }
            }
          ]
        },
        "responses": [
          {
            "description": "OK",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "No update found for processing",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "628b90db5ddd17123ca84cf0",
                "typeName": "ApiError",
                "examples": {
                  "default": {
                    "value": {
                      "errors": [
                        "string"
                      ]
                    }
                  }
                }
              }
            ],
            "statusCode": 404
          },
          {
            "description": "General data processing error",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "628b90db5ddd17123ca84cf0",
                "typeName": "ApiError",
                "examples": {
                  "default": {
                    "value": {
                      "errors": [
                        "string"
                      ]
                    }
                  }
                }
              }
            ],
            "statusCode": 500
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/oms-v1;rev=2/Product_Put')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'oms-v1;rev=2')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), 'oms-v1;rev=2', '628b90db5ddd17123ca84cf0')]"
      ],
      "properties": {
        "displayName": "Update a waiting product action with a success / failure result.",
        "method": "PUT",
        "urlTemplate": "/{submarket}/product",
        "description": "Update a waiting product action with a success / failure result.",
        "templateParameters": [
          {
            "name": "submarket",
            "description": "/{submarket}/product",
            "type": "string",
            "defaultValue": "ukp",
            "required": true,
            "values": [
              "ukp",
              "ukn"
            ]
          }
        ],
        "request": {
          "headers": [],
          "queryParameters": [],
          "representations": [
            {
              "contentType": "application/json",
              "schemaId": "628b90db5ddd17123ca84cf0",
              "typeName": "Product",
              "examples": {
                "default": {
                  "value": {
                    "sku": "string",
                    "result": {
                      "status": true,
                      "message": "string"
                    }
                  }
                }
              }
            }
          ]
        },
        "responses": [
          {
            "description": "OK",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "No update found for processing",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "628b90db5ddd17123ca84cf0",
                "typeName": "ApiError",
                "examples": {
                  "default": {
                    "value": {
                      "errors": [
                        "string"
                      ]
                    }
                  }
                }
              }
            ],
            "statusCode": 404
          },
          {
            "description": "General data processing error",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "628b90db5ddd17123ca84cf0",
                "typeName": "ApiError",
                "examples": {
                  "default": {
                    "value": {
                      "errors": [
                        "string"
                      ]
                    }
                  }
                }
              }
            ],
            "statusCode": 500
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "name": "[concat(parameters('apimServiceName'), '/oms-v1;rev=2/Inventory_Put/policy')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), 'oms-v1;rev=2', 'Inventory_Put')]"
      ],
      "properties": {
        "value": "<!--\n    IMPORTANT:\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\n    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.\n    - To remove a policy, delete the corresponding policy statement from the policy document.\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\n    - Policies are applied in the order of their appearance, from the top down.\n    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.\n-->\r\n<policies>\r\n\t<inbound>\r\n\t\t<base />\r\n\t\t<rewrite-uri template=\"/api/v1/inventory\" />\r\n\t</inbound>\r\n\t<backend>\r\n\t\t<base />\r\n\t</backend>\r\n\t<outbound>\r\n\t\t<base />\r\n\t</outbound>\r\n\t<on-error>\r\n\t\t<base />\r\n\t</on-error>\r\n</policies>",
        "format": "rawxml"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "name": "[concat(parameters('apimServiceName'), '/oms-v1;rev=2/Product_Put/policy')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), 'oms-v1;rev=2', 'Product_Put')]"
      ],
      "properties": {
        "value": "<!--\n    IMPORTANT:\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\n    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.\n    - To remove a policy, delete the corresponding policy statement from the policy document.\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\n    - Policies are applied in the order of their appearance, from the top down.\n    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.\n-->\r\n<policies>\r\n\t<inbound>\r\n\t\t<base />\r\n\t\t<rewrite-uri template=\"/api/v1/product\" />\r\n\t</inbound>\r\n\t<backend>\r\n\t\t<base />\r\n\t</backend>\r\n\t<outbound>\r\n\t\t<base />\r\n\t</outbound>\r\n\t<on-error>\r\n\t\t<base />\r\n\t</on-error>\r\n</policies>",
        "format": "rawxml"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/oms-v1;rev=2/Inventory_Put/Inventory')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), 'oms-v1;rev=2', 'Inventory_Put')]"
      ],
      "properties": {
        "displayName": "Inventory"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/oms-v1;rev=2/Product_Put/Product')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), 'oms-v1;rev=2', 'Product_Put')]"
      ],
      "properties": {
        "displayName": "Product"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/policies",
      "name": "[concat(parameters('apimServiceName'), '/oms-v1;rev=2/policy')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'oms-v1;rev=2')]"
      ],
      "properties": {
        "value": "<!--\n    IMPORTANT:\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\n    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.\n    - To remove a policy, delete the corresponding policy statement from the policy document.\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\n    - Policies are applied in the order of their appearance, from the top down.\n    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.\n-->\r\n<policies>\r\n\t<inbound>\r\n\t\t<base />\r\n\t\t<set-variable name=\"environment\" value=\"dev\" />\r\n\t\t<!-- Ip filtering-->\r\n\t\t<!--<ip-filter action=\"allow\">\n            <address>{{IPF-OMS-1}}</address>\n        </ip-filter>-->\r\n\t\t<!-- Validate JWT OAuth2.0 jwt token -->\r\n\t\t<validate-jwt header-name=\"Authorization\" failed-validation-httpcode=\"401\" failed-validation-error-message=\"Unauthorized. Access token is missing or invalid.\">\r\n\t\t\t<openid-config url=\"https://login.microsoftonline.com/705d07a3-2eea-4f3b-ab59-65ca29abeb26/v2.0/.well-known/openid-configuration\" />\r\n\t\t\t<required-claims>\r\n\t\t\t\t<claim name=\"aud\">\r\n\t\t\t\t\t<value>a8e5558f-452f-464d-89ee-cecf815e8ed3</value>\r\n\t\t\t\t</claim>\r\n\t\t\t\t<claim name=\"roles\" match=\"any\">\r\n\t\t\t\t\t<value>all</value>\r\n\t\t\t\t\t<value>write:submarket-UKP</value>\r\n\t\t\t\t\t<value>write:submarket-UKN</value>\r\n\t\t\t\t</claim>\r\n\t\t\t</required-claims>\r\n\t\t</validate-jwt>\r\n\t\t<set-variable name=\"submarket\" value=\"@{\n            string m = \"\";\n            if (context.Request.MatchedParameters.ContainsKey(\"submarket\")) {\n                m = (string)context.Request.MatchedParameters[\"submarket\"];\n            }\n            return m;\n        }\" />\r\n\t\t<!-- Readdress calls to the corresponding market based no URL parameter market-group-brand-code -->\r\n\t\t<!-- note: additional OMS backends will need addtional when sections poiting to the corresponding hybrid connection -->\r\n\t\t<choose>\r\n\t\t\t<when condition=\"@(context.Request.MatchedParameters.GetValueOrDefault(\"submarket\") == \"ukp\" || context.Request.MatchedParameters.GetValueOrDefault(\"market\") == \"ukn\")\">\r\n\t\t\t\t<set-backend-service base-url=\"https://{{FunctionCoreBaseUrl}}.azurewebsites.net/api/{{HC-OMS-UK}}/\" />\r\n\t\t\t</when>\r\n\t\t\t<otherwise>\r\n\t\t\t\t<return-response>\r\n\t\t\t\t\t<set-status code=\"404\" reason=\"Submarket Not Configured Yet\" />\r\n\t\t\t\t\t<set-header name=\"content-type\" exists-action=\"override\">\r\n\t\t\t\t\t\t<value>application/json</value>\r\n\t\t\t\t\t</set-header>\r\n\t\t\t\t\t<set-body>{\n                        \"Errors\" : \"The OMS Submarket is not configured in this API. Contact API owner to request adding it.\"\n                        }</set-body>\r\n\t\t\t\t</return-response>\r\n\t\t\t</otherwise>\r\n\t\t</choose>\r\n\t\t<!-- Get Function Key if exists in cache, otherwise request to keyvault -->\r\n\t\t<cache-lookup-value key=\"Function-proxycore-key\" variable-name=\"functionKey\" />\r\n\t\t<choose>\r\n\t\t\t<when condition=\"@(!context.Variables.ContainsKey(\"functionKey\"))\">\r\n\t\t\t\t<!-- If the configuration doesn’t exist, make an HTTP request to retrieve it.  -->\r\n\t\t\t\t<send-request mode=\"new\" response-variable-name=\"Secret-Function-proxycore-key\" timeout=\"20\" ignore-error=\"false\">\r\n\t\t\t\t\t<set-url>{{vaultBaseUrl}}/secrets/Function-proxycore-key/?api-version=7.0</set-url>\r\n\t\t\t\t\t<set-method>GET</set-method>\r\n\t\t\t\t\t<authentication-managed-identity resource=\"https://vault.azure.net\" />\r\n\t\t\t\t</send-request>\r\n\t\t\t\t<set-variable name=\"functionKey\" value=\"@{\n                    return (string) ((IResponse)context.Variables[\"Secret-Function-proxycore-key\"]).Body.As<JObject>()[\"value\"];\n                }\" />\r\n\t\t\t\t<cache-store-value key=\"Function-proxycore-key\" value=\"@((string)context.Variables[\"functionKey\"])\" duration=\"60\" />\r\n\t\t\t</when>\r\n\t\t</choose>\r\n\t\t<!-- Set function app key Header -->\r\n\t\t<set-header name=\"x-functions-key\" exists-action=\"override\">\r\n\t\t\t<value>@{\n                return (string) (context.Variables[\"functionKey\"]);\n            }</value>\r\n\t\t</set-header>\r\n\t\t<!-- Set backend API key -->\r\n\t\t<set-header name=\"X-ApiKey\" exists-action=\"override\">\r\n\t\t\t<value>{{X-ApiKey-OMS-UK}}</value>\r\n\t\t</set-header>\r\n\t</inbound>\r\n\t<backend>\r\n\t\t<base />\r\n\t</backend>\r\n\t<outbound>\r\n\t\t<base />\r\n\t</outbound>\r\n\t<on-error>\r\n\t\t<set-header name=\"ErrorSource\" exists-action=\"override\">\r\n\t\t\t<value>@(context.LastError.Source)</value>\r\n\t\t</set-header>\r\n\t\t<set-header name=\"ErrorReason\" exists-action=\"override\">\r\n\t\t\t<value>@(context.LastError.Reason)</value>\r\n\t\t</set-header>\r\n\t\t<set-header name=\"ErrorMessage\" exists-action=\"override\">\r\n\t\t\t<value>@(context.LastError.Message)</value>\r\n\t\t</set-header>\r\n\t\t<set-header name=\"ErrorScope\" exists-action=\"override\">\r\n\t\t\t<value>@(context.LastError.Scope)</value>\r\n\t\t</set-header>\r\n\t\t<set-header name=\"ErrorSection\" exists-action=\"override\">\r\n\t\t\t<value>@(context.LastError.Section)</value>\r\n\t\t</set-header>\r\n\t\t<set-header name=\"ErrorPath\" exists-action=\"override\">\r\n\t\t\t<value>@(context.LastError.Path)</value>\r\n\t\t</set-header>\r\n\t\t<set-header name=\"ErrorPolicyId\" exists-action=\"override\">\r\n\t\t\t<value>@(context.LastError.PolicyId)</value>\r\n\t\t</set-header>\r\n\t\t<set-header name=\"ErrorStatusCode\" exists-action=\"override\">\r\n\t\t\t<value>@(context.Response.StatusCode.ToString())</value>\r\n\t\t</set-header>\r\n\t\t<base />\r\n\t</on-error>\r\n</policies>",
        "format": "rawxml"
      }
    }
  ]
}